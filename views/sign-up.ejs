<!-- Register card -->
<section class="mx-auto mt-10 w-full flex-grow mb-10 max-w-[1200px] px-5">
  <div class="container mx-auto border px-5 py-5 shadow-sm md:w-1/2">
    <div>
      <p class="text-4xl font-bold">CREATE AN ACCOUNT</p>
      <p>Register for new customer</p>
    </div>

    <form id="registerForm" class="mt-6 flex flex-col">
      <label for="name">Full Name</label>
      <input id="name" class="mb-3 mt-3 border px-4 py-2" type="text" placeholder="Bogdan Bulakh" />
      <div id="nameError" class="text-pink-800 hidden px-3 py-2 mt-2 rounded-md text-sm"></div>
      <!-- Error message container -->

      <label class="mt-3" for="email">Email Address</label>
      <input 
        id="email" 
        class="mt-3 border px-4 py-2" 
        type="email" 
        placeholder="user@mail.com" 
        onblur="validateEmail(this)" 
      />
      <div id="emailError" class="text-pink-800 hidden px-3 py-2 mt-2 rounded-md text-sm"></div>      
      <!-- Error message container -->

      <label class="mt-5" for="password">Password</label>
      <input 
        id="password" 
        class="mt-3 border px-4 py-2" 
        type="password" 
        placeholder="&bull;&bull;&bull;&bull;&bull;&bull;&bull;" 
        onblur="validatePassword(this)" 
      />
      <div id="passwordError" class="text-pink-800 hidden px-3 py-2 mt-2 rounded-md text-sm"></div>
      <!-- Error message container -->

      <label class="mt-5" for="confirmPassword">Confirm Password</label>
      <input id="confirmPassword" class="mt-3 border px-4 py-2" type="password"
        placeholder="&bull;&bull;&bull;&bull;&bull;&bull;&bull;" />
      <div id="confirmPasswordError" class="text-pink-800 hidden px-3 py-2 mt-2 rounded-md text-sm"></div>
      <!-- Error message container -->

      <!-- New Fields -->
      <label class="mt-5" for="country">Country</label>
      <input id="country" class="mt-3 border px-4 py-2" type="text" placeholder="E.g., USA" />
      <div id="countryError" class="text-pink-800 hidden px-3 py-2 mt-2 rounded-md text-sm"></div>

      <label class="mt-5" for="city">City</label>
      <input id="city" class="mt-3 border px-4 py-2" type="text" placeholder="E.g., New York" />
      <div id="cityError" class="text-pink-800 hidden px-3 py-2 mt-2 rounded-md text-sm"></div>
      <!-- End of New Fields -->

      <div class="mt-4 flex justify-between">
        <div class="flex gap-2">
          <input id="termsCheckbox" type="checkbox" />
          <label for="checkbox">
            I have read and agree with
            <a href="#" class="text-violet-900">terms &amp; conditions</a>
          </label>
        </div>
      </div>

      <button type="button" id="registerButton" class="my-5 w-full bg-violet-900 py-2 text-white">
        CREATE ACCOUNT
      </button>
    </form>

    <p class="text-center text-gray-500">OR SIGN UP WITH</p>

    <div class="my-5 flex gap-2">
      <button class="w-1/2 bg-blue-800 py-2 text-white">FACEBOOK</button>
      <button class="w-1/2 bg-orange-500 py-2 text-white">GOOGLE</button>
    </div>

    <p class="text-center">
      Already have an account?
      <a href="/log-in" class="text-violet-900">Login now</a>
    </p>
  </div>
</section>
<!-- /Register Card -->

<script>
  function validatePassword(inputElement) {
  const password = inputElement.value.trim();
  const passwordError = document.getElementById('passwordError');
  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

  if (!password || !passwordRegex.test(password)) {
    passwordError.textContent =
      'Password must be at least 8 characters long, include one uppercase letter, one lowercase letter, one number, and one special character.';
    passwordError.classList.remove('hidden');
    inputElement.classList.add('border-red-500');
  } else {
    passwordError.textContent = '';
    passwordError.classList.add('hidden');
    inputElement.classList.remove('border-red-500');
  }
}

function validateEmail(inputElement) {
  const email = inputElement.value.trim();
  const emailError = document.getElementById('emailError');
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

  if (!email || !emailRegex.test(email)) {
    emailError.textContent = 'Please enter a valid email address.';
    emailError.classList.remove('hidden');
    inputElement.classList.add('border-red-500'); 
  } else {
    emailError.textContent = '';
    emailError.classList.add('hidden');
    inputElement.classList.remove('border-red-500');
  }
}

  document.addEventListener('DOMContentLoaded', () => {
    document.getElementById('registerButton').addEventListener('click', async () => {
      const fullName = document.getElementById('name').value.trim();
      const email = document.getElementById('email').value.trim();
      const password = document.getElementById('password').value.trim();
      const confirmPassword = document.getElementById('confirmPassword').value.trim();
      const country = document.getElementById('country').value.trim();
      const city = document.getElementById('city').value.trim();
      const termsAccepted = document.getElementById('termsCheckbox').checked;

      // Clear previous error messages
      ['nameError', 'emailError', 'passwordError', 'confirmPasswordError', 'countryError', 'cityError']
        .forEach(id => document.getElementById(id).classList.add('hidden'));

      let hasError = false;

      // Regular expressions for validation
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

      // Validate form fields
      if (!fullName) {
        document.getElementById('nameError').textContent = 'Full name is required.';
        document.getElementById('nameError').classList.remove('hidden');
        hasError = true;
      }

      if (!email || !emailRegex.test(email)) {
        document.getElementById('emailError').textContent = 'Please enter a valid email address.';
        document.getElementById('emailError').classList.remove('hidden');
        hasError = true;
      }

      if (!password || !passwordRegex.test(password)) {
        document.getElementById('passwordError').textContent =
          'Password must be at least 8 characters long, include one uppercase letter, one lowercase letter, one number, and one special character.';
        document.getElementById('passwordError').classList.remove('hidden');
        hasError = true;
      }

      if (password !== confirmPassword) {
        document.getElementById('confirmPasswordError').textContent = 'Passwords do not match.';
        document.getElementById('confirmPasswordError').classList.remove('hidden');
        hasError = true;
      }

      if (!country) {
        document.getElementById('countryError').textContent = 'Country is required.';
        document.getElementById('countryError').classList.remove('hidden');
        hasError = true;
      }

      if (!city) {
        document.getElementById('cityError').textContent = 'City is required.';
        document.getElementById('cityError').classList.remove('hidden');
        hasError = true;
      }

      if (!termsAccepted) {
        document.getElementById('confirmPasswordError').textContent = 'You must accept the terms and conditions.';
        document.getElementById('confirmPasswordError').classList.remove('hidden');
        hasError = true;
      }

      if (hasError) return;

      try {
        const response = await fetch('/api/register', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ fullName, email, password, country, city }),
        });

        const data = await response.json();

        if (response.ok) {
          alert('Registration successful. Please log in.');
          window.location.href = '/log-in'; 
        } else {
          document.getElementById('emailError').textContent = data.message || 'Registration failed.';
          document.getElementById('emailError').classList.remove('hidden');
        }
      } catch (error) {
        console.error('Error:', error);
        document.getElementById('emailError').textContent = 'An error occurred during registration.';
        document.getElementById('emailError').classList.remove('hidden');
      }
    });
  });
</script>
